@model EventManager.Web.Models.UserInfoViewModel
@section Scripts {
	@Scripts.Render("~/bundles/app")
}


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
	var tokenKey = 'accessToken';
        $(document).ready(function () {
        	if (sessionStorage.getItem('accessToken') == null) {
            	//window.location.href = "LoginPage.html";   //if access token is null then redirect to the login page
            	alert('login first');
            }
            $('#btnload').click(function () {
            	var token = sessionStorage.getItem(tokenKey);
            	var headers = {};
            	if (token) {
            		headers.Authorization = 'Bearer ' + token;
            	}

                $.ajax({
                	url: '/api/values',
                    method: 'GET',
                    headers: headers,
                    success: function (data) {
                    	alert("get api success:" +  data);
                    },
                    error: function (jQXHR) {
                        // If status code is 401, access token expired, so
                        // redirect the user to the login page
                        if (jQXHR.status == "401") {
                            $('#lblerror').text('Please first login !');
                            //window.location.href = "LoginPage.html";
                        }
                        else {
                            $('#lblerror').text(jqXHR.responseText);
                        }
                    }
                });
            });
        });
</script>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserInfoViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasRegistered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasRegistered)
                    @Html.ValidationMessageFor(model => model.HasRegistered, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoginProvider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginProvider, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoginProvider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
				<input type="button" value="TESt" class="btn btn-default" id="btnload" />
				
            </div>
        </div>
		<label id="lblerror" >No Error</label>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
